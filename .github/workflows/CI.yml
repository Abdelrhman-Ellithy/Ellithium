name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu' 

      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Build with Maven
        run: mvn clean install -DskipTests -Dgpg.skip

      - name: Run Tests
        run: mvn test -Dgpg.skip

  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu' 

      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Build with Maven
        run: mvn clean install -DskipTests -Dgpg.skip

      - name: Run Tests
        run: mvn test -Dgpg.skip

  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu' 
          
      - name: Clean up previous test output
        run: |
          if (Test-Path Test-Output\Reports\*) { Remove-Item Test-Output\Reports\* -Force }
          else { Write-Host "No files to delete in Reports" }

          if (Test-Path Test-Output\Logs\*) { Remove-Item Test-Output\Logs\* -Force }
          else { Write-Host "No files to delete in Logs" }

          if (Test-Path Test-Output\ScreenShots\Failed\*) { Remove-Item Test-Output\ScreenShots\Failed\* -Force }
          else { Write-Host "No files to delete in ScreenShots" }

          # Remove all files in UpdateChecker except for checker.json
          Get-ChildItem Test-Output\UpdateChecker\* -Recurse | Where-Object { $_.Name -ne 'checker.json' } | Remove-Item -Force

      - name: Build with Maven
        run: mvn clean install -DskipTests -Dgpg.skip

      - name: Run Tests
        run: mvn test -Dgpg.skip
