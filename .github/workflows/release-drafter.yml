name: Release Drafter

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Make script executable
        run: chmod +x scripts/detect-java-changes.sh
      
      - name: Enhanced Java Change Detection
        id: detect-changes
        run: |
          # Get the last tag for comparison
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")
          echo "Last tag: $LAST_TAG"
          
          # Get the current commit SHA
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "Current commit: $CURRENT_COMMIT"
          
          # Create temporary output directory
          OUTPUT_DIR="/tmp/release_analysis"
          mkdir -p "$OUTPUT_DIR"
          
          # Run enhanced change detection between the last tag and current commit
          echo "Comparing $LAST_TAG to $CURRENT_COMMIT"
          OUTPUT=$(./scripts/detect-java-changes.sh "$LAST_TAG" "$CURRENT_COMMIT" "$OUTPUT_DIR")
          echo "$OUTPUT"
          
          # Extract key metrics for release notes with better error handling
          NEW_METHODS=$(echo "$OUTPUT" | grep "📊 New Methods:" | sed 's/.*📊 New Methods: \([0-9]*\).*/\1/' 2>/dev/null || echo "0")
          NEW_CLASSES=$(echo "$OUTPUT" | grep "🏗️ New Classes:" | sed 's/.*🏗️ New Classes: \([0-9]*\).*/\1/' 2>/dev/null || echo "0")
          MODIFIED_METHODS=$(echo "$OUTPUT" | grep "🔄 Modified Methods:" | sed 's/.*🔄 Modified Methods: \([0-9]*\).*/\1/' 2>/dev/null || echo "0")
          MODIFIED_CLASSES=$(echo "$OUTPUT" | grep "🔄 Modified Classes:" | sed 's/.*🔄 Modified Classes: \([0-9]*\).*/\1/' 2>/dev/null || echo "0")
          FILES_MODIFIED=$(echo "$OUTPUT" | grep "📁 Files Modified:" | sed 's/.*📁 Files Modified: \([0-9]*\).*/\1/' 2>/dev/null || echo "0")
          
          # Debug output
          echo "Extracted metrics:"
          echo "  New Methods: $NEW_METHODS"
          echo "  New Classes: $NEW_CLASSES"
          echo "  Modified Methods: $MODIFIED_METHODS"
          echo "  Modified Classes: $MODIFIED_CLASSES"
          echo "  Files Modified: $FILES_MODIFIED"
          
          # Set outputs for release-drafter
          echo "new_methods_count=$NEW_METHODS" >> $GITHUB_OUTPUT
          echo "new_classes_count=$NEW_CLASSES" >> $GITHUB_OUTPUT
          echo "modified_methods_count=$MODIFIED_METHODS" >> $GITHUB_OUTPUT
          echo "modified_classes_count=$MODIFIED_CLASSES" >> $GITHUB_OUTPUT
          echo "files_modified_count=$FILES_MODIFIED" >> $GITHUB_OUTPUT
          
          # Store full report for release notes
          echo "change_report<<EOF" >> $GITHUB_OUTPUT
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Release Drafter
        id: release_drafter
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml
          name: ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          publish: false
          prerelease: false
      
      - name: Create Enhanced Release Notes
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Creating enhanced release notes for tag: $TAG_NAME"
          
          # Get the change report from our analysis
          CHANGE_REPORT="${{ steps.detect-changes.outputs.change_report }}"
          
          # Create enhanced release body using cat for proper multiline handling
          cat > /tmp/enhanced_body.md << 'EOF'
          ## 🚀 Enhanced Release Notes
          
          ### 📊 Java Code Changes
          - **New Methods:** ${{ steps.detect-changes.outputs.new_methods_count }}
          - **New Classes:** ${{ steps.detect-changes.outputs.new_classes_count }}
          - **Modified Methods:** ${{ steps.detect-changes.outputs.modified_methods_count }}
          - **Modified Classes:** ${{ steps.detect-changes.outputs.modified_classes_count }}
          - **Files Modified:** ${{ steps.detect-changes.outputs.files_modified_count }}
          
          ### 🔍 Detailed Change Analysis
          ```
          $CHANGE_REPORT
          ```
          
          ---
          *Enhanced with Ellithium Java Change Detection*
          EOF
          
          # Update the release with enhanced notes
          gh release edit "$TAG_NAME" --body-file /tmp/enhanced_body.md --repo "$GITHUB_REPOSITORY"
