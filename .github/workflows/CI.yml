name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Helper-Tests:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      
      - name: Maven Dependency Cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/Ellithium
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Download Dependencies
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: mvn dependency:go-offline
      
      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Run Helper Tests
        run: mvn test -Dtest="CSVHelperTests,ExcelHelperTests,JsonHelperTests,PDFHelperTests,PropertyHelperTests,TextHelperTests,JarExtractorTests" -Dsurefire.parallel=classes -DforkCount=7 -DreuseForks=true -DthreadCount=7 -DdataProviderThreadCount=7
        
  DataBase-Tests:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      
      - name: Maven Dependency Cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/Ellithium
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Download Dependencies
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: mvn dependency:go-offline
      
      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Run Database Tests
        run: mvn test -Dtest="SQLiteDBTest,SQLiteDBEdgeCasesTest,SQLiteDBAdvancedTest"


  API-Tests:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      
      - name: Maven Dependency Cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/Ellithium
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Download Dependencies
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: mvn dependency:go-offline
      
      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Run API Tests
        run: mvn test -Dtest="BookingAPITests,ContactListAPITests" -Dsurefire.parallel=classes -DforkCount=2 -DreuseForks=true -DthreadCount=2 -DdataProviderThreadCount=2
  UI-Basic-Tests:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      
      - name: Maven Dependency Cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/Ellithium
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Download Dependencies
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: mvn dependency:go-offline
      
      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Run UI Basic Tests
        run: mvn test -Dtest="loginTests,AmazonSearchTests,AlertsTests,HorizontalSliderTests" -Dsurefire.parallel=classes -DforkCount=4 -DreuseForks=true -DthreadCount=4 -DdataProviderThreadCount=4

  UI-Actions-Tests:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      
      - name: Maven Dependency Cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/Ellithium
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Download Dependencies
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: mvn dependency:go-offline
      
      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Run UI Actions Tests
        run: mvn test -Dtest="DropDownTests,DragDropTests,HoverPageTests,DynamicLoadingPageTests" -Dsurefire.parallel=classes -DforkCount=4 -DreuseForks=true -DthreadCount=4 -DdataProviderThreadCount=4

  UI-BDD-Tests:
    runs-on: macos-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      
      - name: Maven Dependency Cache
        uses: actions/cache@v3
        id: maven-cache
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/Ellithium
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Download Dependencies
        if: steps.maven-cache.outputs.cache-hit != 'true'
        run: mvn dependency:go-offline
      
      - name: Clean up previous test output
        run: |
          rm -rf Test-Output/Reports/*
          rm -rf Test-Output/Logs/*
          rm -rf Test-Output/ScreenShots/Failed/*
          find Test-Output/UpdateChecker/ -type f ! -name 'checker.json' -delete

      - name: Run UI BDD Tests
        run: mvn test -Dtest="TestRunner" -Dsurefire.parallel=methods -DforkCount=10 -DreuseForks=true -DthreadCount=10 -DdataProviderThreadCount=10