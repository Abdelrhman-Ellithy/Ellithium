name: 🚀 Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 2.2.1)'
        required: true
        default: '2.2.1'
      release_type:
        description: 'Release type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  analyze-changes:
    runs-on: ubuntu-latest
    outputs:
      new_methods: ${{ steps.detect-changes.outputs.new_methods_count }}
      new_classes: ${{ steps.detect-changes.outputs.new_classes_count }}
      modified_methods: ${{ steps.detect-changes.outputs.modified_methods_count }}
      modified_classes: ${{ steps.detect-changes.outputs.modified_classes_count }}
      change_report: ${{ steps.detect-changes.outputs.change_report }}
      files_modified: ${{ steps.detect-changes.outputs.files_modified }}
      lines_added: ${{ steps.detect-changes.outputs.lines_added }}
      lines_removed: ${{ steps.detect-changes.outputs.lines_removed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make script executable
        run: chmod +x scripts/detect-java-changes.sh

      - name: Detect changes since last release
        id: detect-changes
        run: |
          # Get the last tag for comparison
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")
          CURRENT_SHA=$(git rev-parse HEAD)
          
          echo "🔍 Analyzing changes from $LAST_TAG to $CURRENT_SHA"
          
          # Run our enhanced change detection script
          ./scripts/detect-java-changes.sh "$LAST_TAG" "$CURRENT_SHA" "/tmp/release_analysis"
          
          echo "✅ Analysis complete!"
          echo "📊 New Methods: $NEW_METHODS_COUNT"
          echo "🏗️ New Classes: $NEW_CLASSES_COUNT"
          echo "🔄 Modified Methods: $MODIFIED_METHODS_COUNT"
          echo "🔄 Modified Classes: $MODIFIED_CLASSES_COUNT"
          echo "📁 Files Modified: $FILES_MODIFIED"

  create-release:
    needs: analyze-changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          body: |
            ## 🎯 Release v${{ github.event.inputs.version }}
            
            ### 📊 Change Summary
            - **New Methods:** ${{ needs.analyze-changes.outputs.new_methods }}
            - **New Classes:** ${{ needs.analyze-changes.outputs.new_classes }}
            - **Modified Methods:** ${{ needs.analyze-changes.outputs.modified_methods }}
            - **Modified Classes:** ${{ needs.analyze-changes.outputs.modified_classes }}
            - **Files Modified:** ${{ needs.analyze-changes.outputs.files_modified }}
            - **Lines Added:** ${{ needs.analyze-changes.outputs.lines_added }}
            - **Lines Removed:** ${{ needs.analyze-changes.outputs.lines_removed }}
            
            ### 🔍 Detailed Changes
            ${{ needs.analyze-changes.outputs.change_report }}
            
            ---
            *This release was automatically generated by the Ellithium Enhanced Release System*
          draft: false
          prerelease: false

  notify-team:
    needs: [analyze-changes, create-release]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify on success
        if: success()
        run: |
          echo "✅ Release v${{ github.event.inputs.version }} created successfully!"
          echo "📊 Changes detected:"
          echo "  - New Methods: ${{ needs.analyze-changes.outputs.new_methods }}"
          echo "  - New Classes: ${{ needs.analyze-changes.outputs.new_classes }}"
          echo "  - Modified Methods: ${{ needs.analyze-changes.outputs.modified_methods }}"
          echo "  - Modified Classes: ${{ needs.analyze-changes.outputs.modified_classes }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Release creation failed!"
          echo "Please check the workflow logs for details."
